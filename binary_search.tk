.code
	ld r8, 65536
	ld r15, 65536
	mov r3, 0
	mov r13, 2
	mov r14, 8
	priv r2, r3, r2, 3
	mov r10, r2
	subi r10, 1
	ld r4, :processInput
	ld r17, :adjustLower
	ld r18, :adjustUpper
	ld r20, :loopCondition
	ld r22, :notLocated
	ld r24, :located
:processInput
	priv r6, r3, r6, 3
	mov (r8)(0), r6
	subi r2, 1
	addi r8, 8
	brnz r4, r2
	clr r7
	priv r9, r3, r9, 3
:loopCondition
	brgt r22, r7, r10
	clr r12
	sub r12, r10, r7
	div r12, r12, r13
	add r12, r7, r12
	mov r30, r12
	mul r12, r12, r14
	add r12, r12, r15
	mov r16, (r12)(0)
	brgt r17, r9, r16
	brgt r18, r16, r9
	br r24
:adjustLower
	ld r27, 1
	add r7, r30, r27
	br r20
:adjustUpper
	ld r28, 1
	sub r10, r30, r28
	br r20
:notLocated
	mov r23, 3
	mov r31, 110
	out r23, r31
	mov r31, 111
	out r23, r31
	mov r31, 116
	out r23, r31
	mov r31, 32
	out r23, r31
	mov r31, 102
	out r23, r31
	mov r31, 111
	out r23, r31
	mov r31, 117
	out r23, r31
	mov r31, 110
	out r23, r31
	mov r31, 100
	out r23, r31
	mov r31, 10
	out r23, r31
	halt
:located
	mov r23, 3
	mov r31, 102
	out r23, r31
	mov r31, 111
	out r23, r31
	mov r31, 117
	out r23, r31
	mov r31, 110
	out r23, r31
	mov r31, 100
	out r23, r31
	mov r31, 10
	out r23, r31
	halt