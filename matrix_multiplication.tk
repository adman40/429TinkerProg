.code
	mov r3, 0
	ld r8, 65536
	ld r9, 65536
	mov r7, 8
	priv r2, r3, r2, 3
	mov r31, r2
	mov r28, r2
	subi r28, 1
	mul r6, r2, r2
	mov r4, r6
	mov r2, r4
	ld r21, :loop_outer
	ld r22, :loadMatrixA
	ld r23, :loop_middle
	ld r24, :loadMatrixB
	ld r25, :loop_inner
	ld r26, :end_inner
	ld r27, :end_middle
	ld r29, :stop
:loadMatrixA
	priv r10, r3, r10, 3
	mov (r8)(0), r10
	subi r2, 1
	addi r8, 8
	brnz r22, r2
	mov r11, r8
	br r24
:loadMatrixB
	priv r10, r3, r10, 3
	subi r4, 1
	mov (r8)(0), r10
	addi r8, 8
	brnz r23, r4
	mov r12, 0
	br r21
:loop_outer
	mov r13, 0
:loop_middle
	clr r30
	mov r14, 0
:loop_inner
	mul r5, r12, r31
	mul r15, r14, r31
	add r5, r5, r14
	add r15, r15, r13
	mul r5, r5, r7
	mul r15, r15, r7
	add r5, r5, r9
	add r15, r15, r11
	mov r16, (r5)(0)
	mov r17, (r15)(0)
	addf r30, r30, r18
	mulf r18, r16, r17
	addi r14, 1
	brgt r26, r14, r28
	br r25
:end_inner
	ld r19, 1
	priv r19, r30, r19, 4
	addi r13, 1
	brgt r27, r13, r28
	br r23
:end_middle
	addi r12, 1
	brgt r29, r12, r28
	br r21
:stop
	halt